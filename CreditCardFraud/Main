from flask import Flask, request, jsonify
from joblib import load
import pandas as pd
import smtplib
from email.message import EmailMessage
from twilio.rest import Client

app = Flask(__name__)
model = load('model.joblib')

# Email and SMS setup
EMAIL_ADDRESS = 'your_email@example.com'
EMAIL_PASSWORD = 'your_email_password'
TWILIO_ACCOUNT_SID = 'your_twilio_sid'
TWILIO_AUTH_TOKEN = 'your_twilio_token'
TWILIO_NUMBER = 'your_twilio_phone_number'
RECIPIENT_NUMBER = 'recipient_phone_number'
RECIPIENT_EMAIL = 'recipient_email@example.com'

# Sending Email
def send_email(subject, body):
    msg = EmailMessage()
    msg.set_content(body)
    msg['Subject'] = subject
    msg['From'] = EMAIL_ADDRESS
    msg['To'] = RECIPIENT_EMAIL
    
    server = smtplib.SMTP_SSL('smtp.example.com', 465)  # Update SMTP server details
    server.login(EMAIL_ADDRESS, EMAIL_PASSWORD)
    server.send_message(msg)
    server.quit()

# Sending SMS
def send_sms(body):
    client = Client(TWILIO_ACCOUNT_SID, TWILIO_AUTH_TOKEN)
    message = client.messages.create(
        body=body,
        from_=TWILIO_NUMBER,
        to=RECIPIENT_NUMBER
    )

@app.route('/predict', methods=['POST'])
def predict():
    data = request.get_json()
    df = pd.DataFrame(data, index=[0])
    prediction = model.predict(df)
    probability = model.predict_proba(df)[:,1]

    if prediction[0] == 1:  # If fraud is predicted
        subject = "Fraud Alert!"
        body_email = f"Suspicious transaction detected! Probability: {probability[0]*100:.2f}%"
        body_sms = f"Alert: Suspicious transaction detected with {probability[0]*100:.2f}% probability of being fraud."
        send_email(subject, body_email)
        send_sms(body_sms)
    
    return jsonify({'prediction': int(prediction[0]), 'probability': float(probability[0])})

if __name__ == '__main__':
    app.run(debug=True, host='0.0.0.0', port=5000)
