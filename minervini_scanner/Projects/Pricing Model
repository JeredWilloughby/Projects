import pandas as pd
import numpy as np

# Generate synthetic data
np.random.seed(42)
num_samples = 100
item_ids = np.arange(1, num_samples + 1)
cost_prices = np.random.uniform(5, 50, num_samples)
demand_factors = np.random.uniform(0.5, 2.0, num_samples)
selling_prices = cost_prices * demand_factors + np.random.normal(0, 5, num_samples)

# Create DataFrame
data = pd.DataFrame({'ItemID': item_ids, 'CostPrice': cost_prices, 'DemandFactor': demand_factors, 'SellingPrice': selling_prices})

# Save to CSV
data.to_csv('item_pricing_dataset.csv', index=False)

--------------------------------------------------------------------------------------------------------------------------------------------

import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error

# Load the dataset
data = pd.read_csv('item_pricing_dataset.csv')

# Extract features (X) and target variable (y)
X = data[['CostPrice', 'DemandFactor']]
y = data['SellingPrice']

# Split the dataset into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Train a linear regression model
model = LinearRegression()
model.fit(X_train, y_train)

# Make predictions on the test set
y_pred = model.predict(X_test)

# Evaluate the model
mse = mean_squared_error(y_test, y_pred)
print(f'Mean Squared Error: {mse}')

# Print the coefficients
print('Coefficients:', model.coef_)
print('Intercept:', model.intercept_)
